name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linting
      run: npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          dist/
          !dist/node_modules
        retention-days: 30
    
    - name: Upload build report
      uses: actions/upload-artifact@v4
      with:
        name: build-report
        path: |
          dist/build-report.json
          dist/size-badge.json
        retention-days: 90

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        publish_branch: gh-pages
        exclude_assets: |
          node_modules/
          src/
          tests/
          scripts/
          .github/
          package*.json
          rollup.config.js
          jest.config.js
          .eslintrc.js
          .gitignore
          PROJECT-STATUS.md
        # Explicitly include important files
        include_assets: |
          dist/
          examples/
          index.html
          README.md
          llms.txt
          .nojekyll
          _config.yml
    
    - name: Comment build sizes on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('dist/build-report.json', 'utf8'));
          
          const comment = `## 📦 Bundle Size Report
          
          | File | Original | Gzipped | Compression |
          |------|----------|---------|-------------|
          ${Object.entries(report.files).map(([file, data]) => 
            `| ${file} | ${formatBytes(data.original)} | ${formatBytes(data.gzipped)} | ${data.compression}% |`
          ).join('\n')}
          
          ### 🔍 Library Comparison (Gzipped)
          ${report.comparison.map(lib => 
            `- **${lib.name}**: ${formatBytes(lib.size)}${lib.name === 'MicroUI' ? '' : ` (${(lib.size / report.files['microui.min.js'].gzipped).toFixed(1)}x larger)`}`
          ).join('\n')}
          
          *Built with commit ${context.sha.slice(0, 7)}*
          
          function formatBytes(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
          }`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
