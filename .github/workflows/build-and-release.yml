name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [ 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build library
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 30

  release:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build library
      run: npm run build

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update package.json version
      run: |
        npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: MicroUI v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## ðŸš€ MicroUI v${{ steps.get_version.outputs.VERSION }}
          
          ### ðŸ“¦ What's Included
          - **microui.js** - Development build with source maps
          - **microui.min.js** - Production build (18.6KB minified, 5.2KB gzipped)
          - **microui.esm.js** - ES modules build for modern bundlers
          
          ### ðŸ“Š Bundle Analysis
          ```
          Minified:  18.6KB
          Gzipped:   5.2KB  
          ES Module: 46.3KB (source)
          ```
          
          ### ðŸ”— Quick Links
          - ðŸ“š [Documentation](https://lam0819.github.io/MicroUI/)
          - ðŸŽ® [Live Examples](https://lam0819.github.io/MicroUI/examples/)
          - ðŸ“‹ [API Reference](https://lam0819.github.io/MicroUI/#api-reference)
          
          ### ðŸ“¥ Installation
          
          **NPM:**
          ```bash
          npm install microui@${{ steps.get_version.outputs.VERSION }}
          ```
          
          **CDN:**
          ```html
          <!-- Development -->
          <script src="https://unpkg.com/microui@${{ steps.get_version.outputs.VERSION }}/dist/microui.js"></script>
          
          <!-- Production -->
          <script src="https://unpkg.com/microui@${{ steps.get_version.outputs.VERSION }}/dist/microui.min.js"></script>
          
          <!-- ES Modules -->
          <script type="module">
            import MicroUI from 'https://unpkg.com/microui@${{ steps.get_version.outputs.VERSION }}/dist/microui.esm.js';
          </script>
          ```
        files: |
          dist/microui.js
          dist/microui.min.js
          dist/microui.esm.js
        draft: false
        prerelease: false
        fail_on_unmatched_files: false
        generate_release_notes: true

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
